[
  {
    "name" : "expr_select_all",
    "check" : {
      "select" : { "from": "test.db" },
      "result" : [{ "k": "0", "v": "0" },{ "k": "1", "v": "1" }]
    }
  },
  {
    "name" : "expr_select_limit",
    "check" : { 
      "select" : { "from": "test.db", "limit": 1 },
      "result" : [{ "k": "0", "v": "0" }]
    }
  },
  {
    "name" : "expr_select_offset",
    "check" : {
      "select" : { "from": "test.db", "offset": 1 },
      "result" : [{ "k": "1", "v": "1" }],
      "desc": "should be returning the second of the two records"
    }
  },
  {
    "name" : "expr_select_insert_2",
    "do"   : {
      "action"   : "insert",
      "database" : "test.db",
      "records"  : [{ "k": 2, "v": "2" }]
    },
    "check" : {
      "select" : { "from": "test.db" },
      "result" : [{ "k": "0", "v": "0" },{ "k": "1", "v": "1" },{ "k": "2", "v": "2" }]
    }
  },
  {
    "name" : "expr_select_where",
    "check" : {
      "select" : { "from": "test.db", "where": {"type": "between", "e": "k", "min": 0, "max": 2} },
      "result" : [{ "k": "0", "v": "0" },{ "k": "1", "v": "1" },{ "k": "2", "v": "2" }]
    }
  },
  {
    "name" : "expr_select_where_short",
    "check" : {
      "select" : { "from": "test.db", "where": {"$between": ["k", 1, 2]} },
      "result" : [{ "k": "0", "v": "0" },{ "k": "1", "v": "1" },{ "k": "2", "v": "2" }],
      "desc" : "should return same result as previous test, but doesn't"
    }
  },
  {
    "name" : "expr_select_where_failed",
    "check" : {
      "select" : { "from": "test.db", "where": {"type": "between", "e": "k", "min": 1, "max": 2} },
      "result" : [{ "k": "1", "v": "1" },{ "k": "2", "v": "2" }],
      "desc" : "should return 2 results, but says there's none"
    }
  },
  {
    "name" : "expr_select_having",
    "check" : {
      "select" : { "from": "test.db", "having": {"type": "between", "e": "k", "min": 0, "max": 2} },
      "result" : [{ "k": "0", "v": "0" },{ "k": "1", "v": "1" },{ "k": "2", "v": "2" }]
    },
    "desc": "this test passes, but `having` has similar issues as `where`"
  }
]